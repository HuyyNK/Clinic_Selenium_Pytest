{"name": "test_add_edit_delete_service_group[test_id_7]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff6b3593d85+79397]\n\tGetHandleVerifier [0x0x7ff6b3593de0+79488]\n\t(No symbol) [0x0x7ff6b333c0fa]\n\t(No symbol) [0x0x7ff6b3392fd6]\n\t(No symbol) [0x0x7ff6b339328c]\n\t(No symbol) [0x0x7ff6b33e6537]\n\t(No symbol) [0x0x7ff6b33bb1df]\n\t(No symbol) [0x0x7ff6b33e3344]\n\t(No symbol) [0x0x7ff6b33baf73]\n\t(No symbol) [0x0x7ff6b33841b1]\n\t(No symbol) [0x0x7ff6b3384f43]\n\tGetHandleVerifier [0x0x7ff6b385e1ed+3005069]\n\tGetHandleVerifier [0x0x7ff6b385831d+2980797]\n\tGetHandleVerifier [0x0x7ff6b3877e0d+3110573]\n\tGetHandleVerifier [0x0x7ff6b35ad6de+184190]\n\tGetHandleVerifier [0x0x7ff6b35b516f+215567]\n\tGetHandleVerifier [0x0x7ff6b359c974+115220]\n\tGetHandleVerifier [0x0x7ff6b359cb29+115657]\n\tGetHandleVerifier [0x0x7ff6b3583268+11016]\n\tBaseThreadInitThunk [0x0x7ffa2797e8d7+23]\n\tRtlUserThreadStart [0x0x7ffa2805c34c+44]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"13133f37257167f035f5e741d79802ce\")>\ntest_case = {'description': 'Nhóm dịch vụ dành cho khoa Nhi', 'group_name': 'Nhóm Nhi Khoa Test 7', 'new_description': 'Nhóm dịch vụ chỉnh sửa cho khoa Nhi', 'new_group_name': 'Nhóm Nhi Khoa Test 7 (Edited)', ...}\n\n    @pytest.mark.parametrize(\"test_case\", test_data, ids=lambda x: f\"test_id_{x['test_id']}\")\n    def test_add_edit_delete_service_group(driver, test_case):\n        \"\"\"Test the full lifecycle of adding, editing, and deleting a service group.\"\"\"\n        test_id = test_case[\"test_id\"]\n        group_name = test_case[\"group_name\"]\n        description = test_case[\"description\"]\n        new_group_name = test_case[\"new_group_name\"]\n        new_description = test_case[\"new_description\"]\n    \n        wait = WebDriverWait(driver, 30)\n        login_page = LoginPage(driver)\n        service_group = ServiceGroupPage(driver)\n    \n        # Login\n        login_page.login()\n        wait.until(lambda d: d.current_url.startswith(\"https://clinic-local.amaz.com.vn/\"))\n    \n        # Navigate to service group page\n>       service_group.navigate()\n\ntests\\test_service_group.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\retry.py:15: in wrapper\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\npages\\service_group_page.py:82: in navigate\n    self.wait.until(EC.element_to_be_clickable(self.LOCATORS[\"service_group_image\"])).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"13133f37257167f035f5e741d79802ce\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x0000021527AB3560>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6b3593d85+79397]\nE       \tGetHandleVerifier [0x0x7ff6b3593de0+79488]\nE       \t(No symbol) [0x0x7ff6b333c0fa]\nE       \t(No symbol) [0x0x7ff6b3392fd6]\nE       \t(No symbol) [0x0x7ff6b339328c]\nE       \t(No symbol) [0x0x7ff6b33e6537]\nE       \t(No symbol) [0x0x7ff6b33bb1df]\nE       \t(No symbol) [0x0x7ff6b33e3344]\nE       \t(No symbol) [0x0x7ff6b33baf73]\nE       \t(No symbol) [0x0x7ff6b33841b1]\nE       \t(No symbol) [0x0x7ff6b3384f43]\nE       \tGetHandleVerifier [0x0x7ff6b385e1ed+3005069]\nE       \tGetHandleVerifier [0x0x7ff6b385831d+2980797]\nE       \tGetHandleVerifier [0x0x7ff6b3877e0d+3110573]\nE       \tGetHandleVerifier [0x0x7ff6b35ad6de+184190]\nE       \tGetHandleVerifier [0x0x7ff6b35b516f+215567]\nE       \tGetHandleVerifier [0x0x7ff6b359c974+115220]\nE       \tGetHandleVerifier [0x0x7ff6b359cb29+115657]\nE       \tGetHandleVerifier [0x0x7ff6b3583268+11016]\nE       \tBaseThreadInitThunk [0x0x7ffa2797e8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffa2805c34c+44]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "description": "Test the full lifecycle of adding, editing, and deleting a service group.", "attachments": [{"name": "log", "source": "6bd8543a-6330-4481-84f5-7624d37de1a8-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_case", "value": "{'test_id': 7, 'group_name': 'Nhóm Nhi Khoa Test 7', 'description': 'Nhóm dịch vụ dành cho khoa Nhi', 'new_group_name': 'Nhóm Nhi Khoa Test 7 (Edited)', 'new_description': 'Nhóm dịch vụ chỉnh sửa cho khoa Nhi'}"}], "start": 1756264425620, "stop": 1756264462176, "uuid": "565935ab-c8b0-45b6-9ccd-0747e7c69150", "historyId": "3813a8da699a465f002bbabbdd4d8634", "testCaseId": "3de2877fadcb8493d73a2384a9bcae08", "fullName": "tests.test_service_group#test_add_edit_delete_service_group", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_service_group"}, {"name": "host", "value": "HuyNK"}, {"name": "thread", "value": "18524-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_service_group"}], "titlePath": ["tests", "test_service_group.py"]}